syntax = "proto3";
option cc_enable_arenas = true;

// this aims to be somewhat compatible with ga4gh
// protobuf schemas -- experimental



// This file defines the objects used to represent variant calls, most importantly
// VariantSet, Variant, and Call.
// See {TODO: LINK TO VARIANTS OVERVIEW} for more information.


// This metadata represents VCF header information.
// no need it will be a fixed peice of memory somewhere



// A `Call` represents the determination of genotype with respect to a
// particular `Variant`.
//
// It may include associated information such as quality
// and phasing. For example, a call might assign a probability of 0.32 to
// the occurrence of a SNP named rs1234 in a call set with the name NA12345.
message Call {
  // The name of the call set this variant call belongs to.
  // If this field is not present, the ordering of the call sets from a
  // `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
  // the ordering of the calls on this `Variant`.
  // The number of results will also be the same.
  string call_set_name = 1;

  // The ID of the call set this variant call belongs to.
  //
  // If this field is not present, the ordering of the call sets from a
  // `SearchCallSetsRequest` over this `VariantSet` is guaranteed to match
  // the ordering of the calls on this `Variant`.
  // The number of results will also be the same.
  string call_set_id = 2;

  // The genotype of this variant call.
  //
  // A 0 value represents the reference allele of the associated `Variant`. Any
  // other value is a 1-based index into the alternate alleles of the associated
  // `Variant`.
  //
  // If a variant had a referenceBases field of "T", an alternateBases
  // value of ["A", "C"], and the genotype was [2, 1], that would mean the call
  // represented the heterozygous value "CA" for this variant. If the genotype
  // was instead [0, 1] the represented value would be "TA". Ordering of the
  // genotype values is important if the phaseset field is present.
  // Missing genotype genotypes may be indicated using the "dot annotation" [".", "."],
  // as specified in VCF4.2; this is e.g. used for types of structural variants.
  google.protobuf.ListValue genotype = 7;

  // If this field is populated, this variant call's genotype ordering implies
  // the phase of the bases and is consistent with any other variant calls on
  // the same contig which have the same phaseset string.
  string phaseset = 4;

  // The genotype likelihoods for this variant call. Each array entry
  // represents how likely a specific genotype is for this call as
  // log10(P(data | genotype)), analogous to the GL tag in the VCF spec. The
  // value ordering is defined by the GL tag in the VCF spec.
  repeated double genotype_likelihood = 5;

  // A map of additional information about the Call.
  Attributes attributes = 8;
}

// A `Variant` represents a change in DNA sequence relative to some reference.
// For example, a variant could represent a SNP or an insertion.
// Variants belong to a `VariantSet`.
// This is equivalent to a row in VCF.



message Variant {

  // name of the reference (e.g. `chr20` or `X`)
  string RefSequenceName = 1;

  // The start position at which this variant occurs (0-based).
  // This corresponds to the first base of the string of reference bases.
  // Genomic positions are non-negative integers less than reference length.
  // Variants spanning the join of circular genomes are represented as
  // two variants one on each side of the join (position 0).
  int64 position = 2;

  // The variant ID.
  string id = 3;

  //the string of the reference bases
  string refBase = 4;

  // The bases that appear instead of the reference bases. Multiple alternate
  // alleles are possible.
  repeated string alternate_bases = 5;

  // string for filter - different from ga4gh
  // "." if there is no filter

  

  // A map of additional information about the Variant.
  Attributes attributes = 13;

  // The variant calls for this particular variant. Each one represents the
  // determination of genotype with respect to this variant. `Call`s in this
  // array are implicitly associated with this `Variant`.
  repeated Call calls = 12;

  // The "variant_type" is used to denote e.g. structural variants.
  // Examples:
  //   DUP  : duplication of sequence following "start"; not necessarily in situ
  //   DEL  : deletion of sequence following "start"
  string variant_type = 17;

  // Length of the - if labeled as such in variant_type - structural variation.
  // Based on the use in VCFv4.2
  int64 svlen = 18;

  // In the case of structural variants, start and end of the variant may not
  // be known with an exact base position. "cipos" provides an interval with
  // high confidence for the start position. The interval is provided by 0 or
  // 2 signed integers which are added to the start position.
  // Based on the use in VCFv4.2
  // Example:
  //   [ -12000, 1000 ]
  repeated sint32 cipos = 19;

  // Similar to "cipos", but for the variant's end position (which is derived
  // from start + svlen).
  // Example:
  //   [ -1000, 0 ]
  repeated sint32 ciend = 20;

}
