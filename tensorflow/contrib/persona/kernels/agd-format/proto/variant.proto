syntax = "proto3";
option cc_enable_arenas = true;

// this aims to be somewhat compatible with ga4gh
// protobuf schemas -- experimental



// This file defines the objects used to represent variant calls, most importantly
// VariantSet, Variant, and Call.
// See {TODO: LINK TO VARIANTS OVERVIEW} for more information.


// This metadata represents VCF header information.
// no need it will be a fixed peice of memory somewhere



// A `Call` represents the determination of genotype with respect to a
// particular `Variant`.
//
// It may include associated information such as quality
// and phasing. For example, a call might assign a probability of 0.32 to
// the occurrence of a SNP named rs1234 in a call set with the name NA12345.

message Call {

  // samplename as in freebayes
  string callName = 1 ;

  // values of GL, PS included in predefined format
  repeated vector<string> parameters = 2 ;

}




// A `Variant` represents a change in DNA sequence relative to some reference.
// For example, a variant could represent a SNP or an insertion.
// Variants belong to a `VariantSet`.
// This is equivalent to a row in VCF.

message Variant {

  // name of the reference (e.g. `chr20` or `X`)
  string refSequenceName = 1;

  // The start position at which this variant occurs (0-based).
  // This corresponds to the first base of the string of reference bases.
  // Genomic positions are non-negative integers less than reference length.
  // Variants spanning the join of circular genomes are represented as
  // two variants one on each side of the join (position 0).
  int64 position = 2;

  // The variant ID.
  string id = 3;

  //the string of the reference bases
  string refBase = 4;

  // The bases that appear instead of the reference bases. Multiple alternate
  // alleles are possible.
  repeated string alternateBases = 5;

  // string for filter - different from ga4gh
  // "." if there is no filter
  string filter = 6;

  // quality value same for all the calls in VCF format and freebayes
  double quality = 7 ;

  // contains a pre defined order of different ID that are specified in VCF file header
  repeated vector<string> info = 8 ;

  // contains a pre defined order of different ID that are specified in VCF file header
  repeated bool infoFlags = 9 ;

  // format also common for all the calls therefore kept outside
  repeated string format = 10 ;

  // all the calls of the variant
  repeated Calls call = 11 ;

  //structural variation not included for now


}
